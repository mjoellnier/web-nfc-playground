{"version":3,"sources":["assets/images/chevron-left.svg","utils/NFCUtil.ts","components/button/Buttons.tsx","pages/App.tsx","pages/SimpleReading.tsx","pages/SimpleWriting.tsx","pages/SimpleUrlWriting.tsx","serviceWorker.ts","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","WriteTypes","createElement","fill","d","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","MenuButton","text","to","className","ActionButton","action","onClick","BackButton","history","useHistory","push","App","React","canRead","setCanRead","canWrite","setCanWrite","console","log","window","id","handleNfcData","data","a","result","original","JSON","stringify","recordType","mediaType","message","records","record","textDecoder","TextDecoder","encoding","decode","lang","createWriteRecord","type","content","language","TEXT","createWritableText","URL","createWritableUrl","url","SimpleReading","setResult","reader","NDEFReader","scan","then","onerror","onreading","event","catch","error","SimpleWriting","userLang","navigator","String","setContent","writer","NDEFWriter","rows","value","onChange","write","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","path","exact","component","SimpleUrlWriting","document","getElementById","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7fbbd31b.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fill: \"#61dafb\",\n  d: \"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49 256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-9.37-9.37-9.37-24.57 0-33.94z\"\n});\n\nvar SvgChevronLeft = function SvgChevronLeft(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 320 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgChevronLeft, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chevron-left.dcf65cd4.svg\";\nexport { ForwardRef as ReactComponent };","export enum WriteTypes {\n  TEXT,\n  URL,\n}\n\nexport const handleNfcData = async (data: any) => {\n  let result: {\n    recordType: string;\n    mediaType: string;\n    id: string;\n    original: string;\n  } = {\n    id: \"pending\",\n    original: JSON.stringify(data),\n    recordType: \"pending\",\n    mediaType: \"pending\",\n  };\n  const message = data.message;\n  for (const record of message.records) {\n    // Logging\n    console.log(\"Record type:  \" + record.recordType);\n    console.log(\"MIME type:    \" + record.mediaType);\n    console.log(\"Record id:    \" + record.id);\n    // Adding to return object\n    result.mediaType = record.mediaType;\n    result.id = record.id;\n    switch (record.recordType) {\n      case \"text\":\n        const textDecoder = new TextDecoder(record.encoding);\n        result.recordType = `Text: ${textDecoder.decode(record.data)} (${\n          record.lang\n        })`;\n        break;\n      case \"url\":\n        result.recordType = `URL: ${record.recordType}`;\n        break;\n      default:\n        result.recordType = `Default: ${record.recordType}`;\n    }\n  }\n  return result;\n};\n\nexport const createWriteRecord = (\n  type: WriteTypes,\n  content: string,\n  language?: string\n) => {\n  switch (type) {\n    case WriteTypes.TEXT:\n      return createWritableText(language, content);\n    case WriteTypes.URL:\n      return createWritableUrl(content);\n    default:\n      break;\n  }\n};\n\n/**\n * A helper method to create the text record to write on a nfc device.\n * @param language The chosen user language\n * @param content The content that has to be written\n */\nconst createWritableUrl = (url: string) => {\n  return {\n    records: [\n      {\n        recordType: \"url\",\n        data: url,\n      },\n    ],\n  };\n};\n\n/**\n * A helper method to create the text record to write on a nfc device.\n * @param language The chosen user language\n * @param content The content that has to be written\n */\nconst createWritableText = (language: string = \"de-DE\", content: string) => {\n  return {\n    records: [\n      {\n        recordType: \"text\",\n        lang: language,\n        encoding: \"utf-8\",\n        data: content,\n      },\n    ],\n  };\n};\n","import * as React from \"react\";\nimport \"./buttonStyle.scss\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { ReactComponent as BackChevron } from \"../../assets/images/chevron-left.svg\";\n\nexport const MenuButton = ({\n  text,\n  target,\n}: {\n  text: string;\n  target: string;\n}) => {\n  return (\n    <Link to={target} className=\"main-menu-button-wrapper\">\n      <div className=\"main-menu-button\">{text}</div>\n    </Link>\n  );\n};\n\nexport const ActionButton = ({\n  text,\n  action,\n}: {\n  text: string;\n  action: Function;\n}) => {\n  return (\n    <div onClick={() => action()} className=\"main-menu-button-wrapper\">\n      <div className=\"main-menu-button\">{text}</div>\n    </div>\n  );\n};\n\nexport const BackButton = () => {\n  const history = useHistory();\n\n  return (\n    <div className=\"back-button-wrapper\" onClick={() => history.push(\"/\")}>\n      <BackChevron className=\"back-button-chevron\" />\n      <p>Home</p>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport \"../assets/styles/App.scss\";\nimport { MenuButton } from \"../components/button/Buttons\";\n\nconst App = () => {\n  const [canRead, setCanRead] = React.useState(false);\n  const [canWrite, setCanWrite] = React.useState(false);\n\n  React.useEffect(() => {\n    console.log(\"Checking your NFC capabilities:\");\n    if (\"NDEFReader\" in window) {\n      console.log(\"✅ You can read NFC tags!\");\n      setCanRead(true);\n    } else {\n      console.log(\"❌ You can NOT read NFC tags!\");\n    }\n    if (\"NDEFWriter\" in window) {\n      console.log(\"✅ You can write NFC tags!\");\n      setCanWrite(true);\n    } else {\n      console.log(\"❌ You can NOT write read NFC tags!\");\n    }\n  }, []);\n\n  return (\n    <div className=\"home-wrapper\">\n      <div id=\"nfc-capability-intro\">\n        <h1>Your NFC capabilites:</h1>\n        <h3>Reading NFC: {canRead ? \"✅\" : \"❌\"}</h3>\n        <h3>Writing NFC: {canWrite ? \"✅\" : \"❌\"}</h3>\n      </div>\n      <MenuButton target=\"/simplereading\" text=\"Simple Reading\" />\n      <MenuButton target=\"/simplewriting\" text=\"Simple Text Writing\" />\n      <MenuButton target=\"/simpleurlwriting\" text=\"Simple URL Writing\" />\n    </div>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport \"../assets/styles/App.scss\";\nimport { handleNfcData } from \"../utils/NFCUtil\";\nimport { BackButton } from \"../components/button/Buttons\";\n\n// dirty hack to keep TypeScript happy\ndeclare var NDEFReader: any;\n\nconst SimpleReading = () => {\n  const [result, setResult] = React.useState(\"booting up... \");\n\n  React.useEffect(() => {\n    const reader = new NDEFReader();\n    reader\n      .scan()\n      .then(() => {\n        setResult(\"pending...\");\n        reader.onerror = () => {\n          setResult(\"Cannot read data from the NFC tag. Try another one?\");\n        };\n        reader.onreading = (event: any) => {\n          console.log(\"NDEF message read.\");\n          handleNfcData(event).then((result) =>\n            setResult(JSON.stringify(result))\n          );\n        };\n      })\n      .catch((error: any) => {\n        setResult(`Error! Scan failed to start: ${error}.`);\n      });\n  }, []);\n\n  return (\n    <div className=\"home-wrapper\">\n      <BackButton />\n      <h2>Scan your NFC token!</h2>\n      Result: {JSON.stringify(result)}\n    </div>\n  );\n};\n\nexport default SimpleReading;\n","import * as React from \"react\";\nimport \"../assets/styles/App.scss\";\nimport { ActionButton, BackButton } from \"../components/button/Buttons\";\nimport { createWriteRecord, WriteTypes } from \"../utils/NFCUtil\";\n\n// dirty hack to keep TypeScript happy\ndeclare var NDEFWriter: any;\n\nconst SimpleWriting = () => {\n  const userLang = navigator.language;\n  const [result, setResult] = React.useState(\"Write!\");\n  const [content, setContent] = React.useState(String);\n  const writer = new NDEFWriter();\n\n  const write = () => {\n    writer\n      .write(createWriteRecord(WriteTypes.TEXT, content, userLang))\n      .then(() => {\n        setResult(\"Message written.\");\n      })\n      .catch((error: any) => {\n        setResult(`Write failed :-( try again`);\n        console.error(\"Write Error: \", error);\n      });\n  };\n\n  return (\n    <div className=\"home-wrapper\">\n      <BackButton />\n      <h2>What do you want to write?</h2>\n      <textarea\n        rows={5}\n        value={content}\n        onChange={(value) => setContent(value.target.value)}\n      />\n      <ActionButton text={result} action={() => write()} />\n    </div>\n  );\n};\n\nexport default SimpleWriting;\n","import * as React from \"react\";\nimport \"../assets/styles/App.scss\";\nimport { ActionButton, BackButton } from \"../components/button/Buttons\";\nimport { createWriteRecord, WriteTypes } from \"../utils/NFCUtil\";\n\n// dirty hack to keep TypeScript happy\ndeclare var NDEFWriter: any;\n\nconst SimpleWriting = () => {\n  const [result, setResult] = React.useState(\"Write!\");\n  const [content, setContent] = React.useState(String);\n  const writer = new NDEFWriter();\n\n  const write = () => {\n    writer\n      .write(createWriteRecord(WriteTypes.URL, content))\n      .then(() => {\n        setResult(\"URL written.\");\n      })\n      .catch((error: any) => {\n        setResult(`Write failed :-( try again`);\n        console.error(\"Write Error: \", error);\n      });\n  };\n\n  return (\n    <div className=\"home-wrapper\">\n      <BackButton />\n      <h2>Which URL do you want to write?</h2>\n      <textarea\n        rows={1}\n        value={content}\n        onChange={(value) => setContent(value.target.value)}\n      />\n      <ActionButton text={result} action={() => write()} />\n    </div>\n  );\n};\n\nexport default SimpleWriting;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./assets/styles/global.scss\";\nimport App from \"./pages/App\";\nimport SimpleReading from \"./pages/SimpleReading\";\nimport SimpleWriting from \"./pages/SimpleWriting\";\nimport SimpleUrlWriting from \"./pages/SimpleUrlWriting\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Route path=\"/\" exact component={App} />\n      <Route path=\"/simplereading\" exact component={SimpleReading} />\n      <Route path=\"/simplewriting\" exact component={SimpleWriting} />\n      <Route path=\"/simpleurlwriting\" exact component={SimpleUrlWriting} />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}